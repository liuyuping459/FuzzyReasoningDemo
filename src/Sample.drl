package com.sample.rules
 
import com.sample.service.DroolsService;
import com.sample.bean.Message;
import com.sample.function.Values;
import com.sample.function.Assistant;
import java.util.HashMap;
import java.util.Map;


rule "0"
	salience 1
	no-loop false
	when
		$message0 : Message(a == 0)
		$assistant : Assistant()
	then
		retract($message0);
		for(Message message: $assistant.getMessageList()) {
			insert(message);
			//System.out.println("###");
		}
		$assistant.getMessageList().clear();
end
/*
//规则1：if           纵裂纹
//and 区域
//and 较深裂纹
//and 总是准确地在同一位置
//then         结晶器在液面处受损
rule "1"
	salience 4
	no-loop true
    
    when
		$message1 : Message(a == 1)
		$message9 : Message(a == 2)
		$message10 : Message(a == 3)
		$message11 : Message(a == 4)
		$assistant : Assistant()
    
    then
    	//System.out.println(1);
    			
 		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(1, 0.2);
 		factAndWeight.put(2, 0.2);
 		factAndWeight.put(3, 0.2);
 		factAndWeight.put(4, 0.4);
 		$assistant.inferenceOneStep(12, factAndWeight, 70);

 		insert(new Message(0));
end

//--------------------------------------------
//规则2：if           结晶器在液面处受损
//then         检修结晶器宽面出现裂纹的位置
rule "2"
	salience 4
	no-loop true
    
    when
		$message12 : Message(a == 12)
		$assistant : Assistant()

    then
    	//System.out.println(2);

 		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(12, 1.0);
 		$assistant.inferenceOneStep(13, factAndWeight, 90);

 		insert(new Message(0));
end
*/
//--------------------------------------------
//规则3：if           纵裂纹
//and 区域
//and 较深裂纹
//and 总是出现在宽侧中间
//and 厚板坯
//then         结晶器冷却不均匀
rule "3"
	salience 4
	no-loop true
    
    when
    	$message1 : Message(a == 1)
    	$message9 : Message(a == 2)
    	$message10 : Message(a == 3)
    	$message14 : Message(a == 4)
    	$message15 : Message(a == 5)
    	$assistant : Assistant()
    	
    then
    	//System.out.println(3);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(1, 0.2);
 		factAndWeight.put(2, 0.2);
 		factAndWeight.put(3, 0.2);
 		factAndWeight.put(4, 0.2);
 		factAndWeight.put(5, 0.2);
 		$assistant.inferenceOneStep(16, factAndWeight, 93);

 		insert(new Message(0));
end

//--------------------------------------------
//规则4：if           结晶器冷却不均匀
//then         调整SEN与结晶器壁之间的距离
rule "4"
	salience 4
	no-loop true
	
    when
		$message16 : Message(a == 16)
		$assistant : Assistant()
    
    then
    	//System.out.println(4);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(16, 1.0);
 		$assistant.inferenceOneStep(17, factAndWeight, 90);

 		insert(new Message(0));
end

rule "5"
	salience 4
	no-loop true
	
    when
		$message2 : Message(a == 2)
		$assistant : Assistant()
    
    then
    	//System.out.println(5);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(2, 1.0);
 		$assistant.inferenceOneStep(17, factAndWeight, 90);

 		insert(new Message(0));
end

rule "6"
	salience 4
	no-loop true
    
    when
    	$message13 : Message(a == 3)
    	$message17 : Message(a == 7)
    	$message12 : Message(a == 2)
    	$assistant : Assistant()
    
    then
    	//System.out.println(6);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(2, 0.2);
 		factAndWeight.put(3, 0.4);
 		factAndWeight.put(7, 0.4);
 		$assistant.inferenceOneStep(18, factAndWeight, 90);

 		insert(new Message(0));
end

rule "7"
	salience 4
	no-loop true
    
    when
    	$message10 : Message(a == 10)
    	$message15 : Message(a == 15)
    	$assistant : Assistant()
    
    then
    	System.out.println(7);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(10, 0.6);
 		factAndWeight.put(15, 0.4);
 		$assistant.inferenceOneStep(26, factAndWeight, 95);

 		insert(new Message(0));
end

rule "8"
	salience 4
	no-loop true
    
    when
    	$message10 : Message(a == 10)
    	$message15 : Message(a == 15)
    	$assistant : Assistant()
    
    then
    	//System.out.println(8);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(10, 0.4);
 		factAndWeight.put(15, 0.6);
 		$assistant.inferenceOneStep(27, factAndWeight, 82);

 		insert(new Message(0));
end

rule "9"
	salience 4
	no-loop true
    
    when
    	$message10 : Message(a == 10)
    	$message19 : Message(a == 19)
    	$assistant : Assistant()
    
    then
    	//System.out.println(9);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(10, 0.6);
 		factAndWeight.put(19, 0.4);
 		$assistant.inferenceOneStep(27, factAndWeight, 87);

 		insert(new Message(0));
end

rule "10"
	salience 4
	no-loop true
    
    when
    	$message19 : Message(a == 19)
    	$assistant : Assistant()
    
    then
    	//System.out.println(10);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(19, 1.0);
 		$assistant.inferenceOneStep(29, factAndWeight, 85);

 		insert(new Message(0));
end

rule "11"
	salience 4
	no-loop true
    
    when
    	$message19 : Message(a == 19)
    	$assistant : Assistant()
    
    then
    	//System.out.println(11);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(19, 1.0);
 		$assistant.inferenceOneStep(30, factAndWeight, 85);

 		insert(new Message(0));
end

rule "12"
	salience 4
	no-loop true
    
    when
    	$message19 : Message(a == 19)
    	$assistant : Assistant()
    
    then
    	//System.out.println(7);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(19, 1.0);
 		$assistant.inferenceOneStep(31, factAndWeight, 85);

 		insert(new Message(0));
end

rule "13"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 21)
    	$assistant : Assistant()
    
    then
    	//System.out.println(13);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(21, 1.0);
 		$assistant.inferenceOneStep(32, factAndWeight, 80);

 		insert(new Message(0));
end

rule "14"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 1)
    	$assistant : Assistant()
    
    then
    	//System.out.println(14);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(1, 1.0);
 		$assistant.inferenceOneStep(32, factAndWeight, 89);

 		insert(new Message(0));
end

rule "15"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 2)
    	$assistant : Assistant()
    
    then
    	//System.out.println(13);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(2, 1.0);
 		$assistant.inferenceOneStep(32, factAndWeight, 82);

 		insert(new Message(0));
end

rule "16"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 3)
    	$assistant : Assistant()
    
    then
    	//System.out.println(16);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(3, 1.0);
 		$assistant.inferenceOneStep(8, factAndWeight, 88);

 		insert(new Message(0));
end

rule "17"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 7)
    	$assistant : Assistant()
    
    then
    	//System.out.println(16);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(7, 1.0);
 		$assistant.inferenceOneStep(19, factAndWeight, 86);

 		insert(new Message(0));
end

rule "18"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 6)
    	$assistant : Assistant()
    
    then
    	//System.out.println(16);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(6, 1.0);
 		$assistant.inferenceOneStep(7, factAndWeight, 84);

 		insert(new Message(0));
end

rule "19"
	salience 4
	no-loop true
    
    when
    	$message21 : Message(a == 8)
    	$assistant : Assistant()
    
    then
    	//System.out.println(19);

		Map<Integer, Double> factAndWeight = new HashMap<Integer, Double>();
 		factAndWeight.put(8, 1.0);
 		$assistant.inferenceOneStep(19, factAndWeight, 84);

 		insert(new Message(0));
end


//--------------------------------------------